-- restaurant db
-- Ordering Combination Choosing 1 dish with 1 or none drink

-- 5 tables
-- 3-5 queries
-- 1 with
-- 1 sub
-- 1 aggregate 

.open restaurant.db

-- create + insert table 1 
DROP TABLE BaseMenus;
CREATE TABLE IF NOT EXISTS BaseMenus(
  BaseNum int,
  BaseName text,
  BasePrice int
);

INSERT INTO BaseMenus VALUES
  (1,'Pad Kra Pao',40),
  (2,'Pad Thai',45),
  (3,'Khai Jiao',30),
  (4,'Kao Pad',45);

-- create + insert table 2
DROP TABLE Ingredients;
CREATE TABLE IF NOT EXISTS Ingredients(
  IngredientNum int,
  IngredientName text,
  IngredientPrice int
);

INSERT INTO Ingredients VALUES
  (1,'Pork',25),
  (2,'Chicken',25),
  (3,'Meat',35),
  (4,'Seafood',40),
  (5,'Vegetarian',20);

-- create + insert table 3
DROP TABLE Beverages;
CREATE TABLE IF NOT EXISTS Beverages(
  BeverageNum int,
  BeverageName text,
  BeveragePrice int
);

INSERT INTO Beverages VALUES
  (0,'None',0),
  (1,'Water',7),
  (2,'Soda',15),
  (3,'EnergyDrink',35);

-- create + insert table 4
DROP TABLE Payments;
CREATE TABLE IF NOT EXISTS Payments(
  PaymentNum int,
  PaymentName text
);

INSERT INTO Payments VALUES
  (1,'QR code'),
  (2,'Cash'),
  (3,'Cards');


-- create + insert table 5
DROP TABLE CustomerOrders;
CREATE TABLE IF NOT EXISTS CustomerOrders(
  OrderNum int,
  CustomerName text,
  BaseNum int,
  IngredientNum int,
  BeverageNum int,
  PaymentNum int
);

INSERT INTO CustomerOrders VALUES
  (1,'Adam',1,1,1,3),
  (2,'Adam',2,1,2,3),
  (3,'Adam',4,5,3,3),
  (4,'Anna',3,3,0,2),
  (5,'Anna',1,5,2,2),
  (6,'Josh',1,5,2,1),
  (7,'David',1,4,3,1),
  (8,'David',4,2,1,1),
  (9,'Andrew',1,2,0,3),
  (10,'Marie',1,5,1,2),
  (11,'Bruse',3,1,3,2);

.mode column
.header on

-- WITH

WITH OrderMatching AS ( 
SELECT
  OrderNum,
  CustomerName,
  BaseName,
  IngredientName,
  BaseName || ' ' || IngredientName || ' Wtih ' || BeverageName AS RealOrder,
  BasePrice + IngredientPrice + BeveragePrice AS TotalPrice,
  BeverageName,
  PaymentName
FROM CustomerOrders
JOIN BaseMenus
ON BaseMenus.BaseNum = CustomerOrders.BaseNum
JOIN Ingredients
ON Ingredients.IngredientNum = CustomerOrders.IngredientNum
JOIN Beverages
ON Beverages.BeverageNum = CustomerOrders.BeverageNum
JOIN Payments
ON Payments.paymentNum = CustomerOrders.paymentNum 
)

-- Query1 
-- Price calculation per transaction
/*
Select
  OrderNum,
  RealOrder,
  TotalPrice
From OrderMatching*/

-- Query2
-- AGGREGATE
-- Calculate price per person
SELECT 
  Customername, 
  SUM(TotalPrice) AS Total_Price,
  count(*) AS Total_order,
  PaymentName AS Paid_With
FROM OrderMatching
GROUP BY Customername;

-- Query3
-- Check the most popular menu
-- SUB
/*SELECT 
  BaseName,
  count(*) AS Total_order
FROM OrderMatching
GROUP BY BaseName
ORDER BY 2 DESC;*/
